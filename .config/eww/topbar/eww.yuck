;; === vars ===
;; time vars
(defpoll TIME :interval "5s" `date +\"%I:%M %p\"`)
(defpoll DATE :interval "5s" `date +\"%A, %B %d\"`)

;; weather vars
(defpoll WEATHER :interval "5m" `scripts/weather.sh`)

;; music vars
(defpoll SONG :interval "1s" `scripts/spotify/spotify-song.sh`)
(defpoll ARTIST :interval "1s" `scripts/spotify/spotify-artist.sh`)
(defpoll COVER :interval "1s" `scripts/spotify/spotify-artwork.sh`)
(defpoll STATUS :interval "1s" `scripts/spotify/spotify-status.sh`)

;; battery vars
(defpoll BATICON :interval "1s" `scripts/battery.sh --icon`)
(defpoll BATPERC :interval "10s" `scripts/battery.sh --perc`)

;; screen
(defpoll BRIGHTNESS :interval "1s" `scripts/brightness.sh level`)
(defpoll BRIGHTICON :interval "1s" `scripts/brightness.sh icon`)

;; audio vars
(defpoll VOLICON :interval "1s" `scripts/volume --icon`)
(defpoll VOLUME :interval "1s" `scripts/volume --get`)
(defpoll MICROPHONE :interval "1s" "scripts/mic.sh")
(defpoll MICICON :interval "1s" "scripts/micicon.sh")

;; network
(defpoll WIFIICON :interval "10s" `scripts/check-network --icon`)
(defpoll NETSTAT :interval "10s" `scripts/check-network --stat`)

(defpoll MYWORKSPACE :interval "0.5s" `hyprctl activeworkspace | head -1 | cut -d ' ' -f3`)

;; user
(defvar IMAGE "images/profile.jpeg")
(defpoll USER :interval "10m" `whoami`)
(defvar OPTIONS "images/options.png")

;; === widgets ===
(defwidget workspaces []
           (box :class "dockbox"
                :orientation "h"
                :spacing 5
                :space-evenly false
                (button :onclick "hyprctl dispatch workspace 1" :valign "center" (label :text "code" :class {MYWORKSPACE == "1" ? "active" : "inactive"}))
                (button :onclick "hyprctl dispatch workspace 2" :valign "center" (label :text "music" :class {MYWORKSPACE == "2" ? "active" : "inactive"}))
                (button :onclick "hyprctl dispatch workspace 3" :valign "center" (label :text "web" :class {MYWORKSPACE == "3" ? "active" : "inactive"}))
                (button :onclick "hyprctl dispatch workspace 4" :valign "center" (label :text "more" :class {MYWORKSPACE == "4" ? "active" : "inactive"}))))

(defwidget time []
           (box :class "dockbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
                (label :class "time" :halign "start" :wrap "true" :limit-width 25 :text TIME)
                (label :class "date" :halign "start" :wrap "true" :limit-width 25 :text DATE)))

(defwidget apps []
           (box :class "dockbox"
                (box :orientation "h" :spacing 15 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                     (button :style "background-image: url('images/icons/apps/mpv.png');" :class "appicon" :onclick "mpv")
                     (button :style "background-image: url('images/icons/apps/files.png');" :class "appicon" :onclick "scripts/apps --thunar")
                     (button :style "background-image: url('images/icons/apps/emacs.png');" :class "appicon" :onclick "emacs")
                     (button :style "background-image: url('images/icons/apps/terminal.png');" :class "appicon" :onclick "scripts/apps --kitty")
                     (button :style "background-image: url('images/icons/apps/firefox.png');" :class "appicon" :onclick "firefox"))))

(defwidget spotify []
           (box :class "dockbox"
                (box :orientation "h" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false" :hexpand "false"
                     (box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
                     (box :class "musicbox" :orientation "v" :spacing 0 :valign "center" :halign "start" :space-evenly "false" :vexpand "false"
                          (label :class "song" :halign "start" :wrap "false" :limit-width 30 :text SONG)
                          (label :class "artist" :halign "start" :wrap "false" :limit-width 20 :text ARTIST)))
                (box :class "musicbuttons" :orientation "h" :spacing 10 :valign "center" :halign "end" :space-evenly "false" :vexpand "false" :hexpand "false"
                     (button :style "background-image: url('images/icons/music/previous-button.png');" :class "trackbutton" :onclick "scripts/spotify/spotify-previous.sh")
                     (button :style "background-image: url('${STATUS}');" :class "playbutton" :onclick "scripts/spotify/spotify-pause.sh")
                     (button :style "background-image: url('images/icons/music/next-button.png');" :class "trackbutton" :onclick "scripts/spotify/spotify-next.sh"))))

(defwidget audio []
           (box :class "dockbox"
                (box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"

		     (button :onclick "scripts/volume --toggle"
			     (box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				  (box :style "background-image: url('${VOLICON}');" :class "trayicon")
				  (label :class "infotext" :halign "start" :text VOLUME)))
		     (button :onclick "scripts/mictoggle.sh"
			     (box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
				  (box :style "background-image: url('${MICICON}');" :class "trayicon")
				  (label :class "infotext" :halign "start" :text MICROPHONE))))))

(defwidget screen []
           (box :class "dockbox"
                (box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                     (button :onclick "scripts/volume --toggle"
                             (box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                                  (box :style "background-image: url('${BRIGHTICON}');" :class "trayicon")
                                  (label :class "infotext" :halign "start" :text "${BRIGHTNESS}%")))
                     (button :onclick "scripts/widget_apps --pow"
                             (box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                                  (box :style "background-image: url('${BATICON}');" :class "trayicon")
                                  (label :class "infotext" :halign "start" :text BATPERC))))))


(defwidget profile []
           (box :class "dockbox"
                (box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                     (button :onclick "scripts/widget_apps --nm"
                             (box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                                  (box :style "background-image: url('${WIFIICON}');" :class "trayicon")
                                  (label :class "infotext" :halign "start" :text NETSTAT)))
                     (button :onclick "sidedar/toggle_sidebar"
                             (box :orientation "h" :spacing 8 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                                  (box :style "background-image: url('${IMAGE}');" :class "face")
                                  (label :class "infotext" :halign "start" :text USER))))))

(defwidget more []
           (box :class "dockbox"
                (button :onclick "~/.config/eww/dashboard/launch_bar.sh"
                        (box :orientation "h" :spacing 16 :valign "center" :halign "center" :space-evenly "false" :vexpand "false" :hexpand "false"
                             (box :style "background-image: url('${OPTIONS}');" :class "face")))))

;; === windows ===
(defwindow statusbar
           :monitor 0
           :exclusive true
           :namespace "statusbar"
           :windowtype "dock"
           :geometry (geometry :y "5px"
                               :width "90%"
                               :anchor "top center")
           (centerbox
            :space-evenly "false" :vexpand "false"
            (box
             :orientation "h" :spacing 16 :space-evenly "false" :vexpand "false"
             (workspaces)
             (time)
             ;; (apps)
             )
            (spotify)
            (box
             :orientation "h" :spacing 16 :space-evenly "false" :halign "end"
             (audio)
             (screen)
             (profile)
             (more))))

(defwindow weather
           :monitor 0
           :vexpand "false"
           :geometry (geometry :x "5px"
                               :y "5px"
                               :width "300px"
                               ;; :height "45px"
                               :anchor "top left")
           ;; :reserve (struts :distance "80px" :side "top")
           (weather))

(defwindow spotify
           :monitor 0
           :geometry (geometry :x "310px"
                               :y "5px"
                               :width "400px"
                               ;; :height "45px"
                               :anchor "top left")
           :stacking "fg"
           ;; :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
           (spotify))

(defwindow apps
           :monitor 0
           :geometry (geometry :x "760px"
                               :y "5px"
                               :width "400px"
                               ;; :height "45px"
                               :anchor "top left")
           :stacking "fg"
           ;; :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
           (apps))

(defwindow audio
           :monitor 0
           :geometry (geometry :x "1246px"
                               :y "5px"
                               :width "170px"
                               ;; :height "45px"
                               :anchor "top left")
           :stacking "fg"
           ;; :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
           (audio))

(defwindow screen
           :monitor 0
           :geometry (geometry :x "1421px"
                               :y "5px"
                               :width "210px"
                               ;; :height "45px"
                               :anchor "top left")
           :stacking "fg"
           ;; :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
           (screen))

;; profile
(defwindow profile
           :monitor 0
           :geometry (geometry :x "1636px"
                               :y "5px"
                               :width "230px"
                               ;; :height "45px"
                               :anchor "top left")
           :stacking "fg"
           ;; :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           :wm-ignore false
           (profile))

;;more
(defwindow more
           :monitor 0
           :geometry (geometry :x "1871px"
                               :y "5px"
                               :width "44px"
                               ;; :height "45px"
                               :anchor "top left")
           :stacking "fg"
           ;; :reserve (struts :distance "80px" :side "top")
           :windowtype "dock"
           (more))