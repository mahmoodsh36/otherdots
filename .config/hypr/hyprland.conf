# See https://wiki.hyprland.org/Configuring/Monitors/
monitor=,highres,auto,auto

# programs
# $terminal = wezterm-gui
$terminal = kitty
$fileManager = dolphin
$menu = ~/work/scripts/run.sh

# autostart
exec-once = $terminal
exec-once = ~/work/scripts/start_ags.sh
exec-once = cd ~/work/widgets/; venv/bin/python ~/work/widgets/bar.py
exec-once = swww-daemon & disown; swww img ~/.cache/wallpaper
exec-once = hawck-macrod; hawck-add ~/.config/hawck/scripts/main.hwk # we dont need to hawck-add every time
# exec-once = nm-applet &
# exec-once = waybar & hyprpaper & firefox

# environment variables
env = XCURSOR_SIZE,24
env = HYPRCURSOR_SIZE,24

# look and feel
# refer to https://wiki.hyprland.org/Configuring/Variables/
# https://wiki.hyprland.org/Configuring/Variables/#general
general {
    gaps_in = 5
    gaps_out = 5


    # borders
    border_size = 0
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)
    # set to true enable resizing windows by clicking and dragging on borders and gaps
    # resize_on_border = true

    # please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on
    allow_tearing = false

    layout = scroller
}

# https://wiki.hyprland.org/Configuring/Variables/#decoration
decoration {
    # rounding = 10

    # change transparency of focused and unfocused windows
    # active_opacity = 1.0
    # inactive_opacity = 1.0

    # https://wiki.hyprland.org/Configuring/Variables/#blur
    blur {
        enabled = true
        size = 3
        passes = 1

        vibrancy = 0.1696
    }
}

# https://wiki.hyprland.org/Configuring/Variables/#animations
animations {
    enabled = true

    # Default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

# https://wiki.hyprland.org/Configuring/Variables/#misc
misc {
    force_default_wallpaper = 0
    disable_hyprland_logo = true
}

# keyboard layouts
# https://wiki.hyprland.org/Configuring/Variables/#input
input {
    kb_layout = us
    #kb_variant = ,qwerty
    follow_mouse = 1
    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
    touchpad {
        natural_scroll = false
    }
}

# https://wiki.hyprland.org/Configuring/Variables/#gestures
gestures {
    workspace_swipe = true
}

# example per-device config
# see https://wiki.hyprland.org/Configuring/Keywords/#per-device-input-configs for more
device {
    name = epic-mouse-v1
    sensitivity = -0.5
}

# keybindings, https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER

bind = $mainMod, Return, exec, $terminal
bind = $mainMod, Q, killactive,
# bind = $mainMod, M, exit,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = $mainMod, R, exec, $menu
# bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle

bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9

# example special workspace (scratchpad)
# bind = $mainMod, S, togglespecialworkspace, magic
# bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# switch keyboard layout
# bind = $mainMod_SHIFT, , exec, switch_layout.sh

bind = $mainMod, Tab, cyclenext,
bind = $mainMod, Tab, bringactivetotop,
bind = $mainMod_SHIFT, Tab, cyclenext, prev

# mode
bind = $mainMod, X, submap, execute
submap = execute
binde = , e, exec, emacs & hyprctl dispatch submap reset
binde = , w, exec, firefox & hyprctl dispatch submap reset
binde = , o, exec, terminal_with_cmd.sh top & hyprctl dispatch submap reset
binde = , p, exec, terminal_with_cmd.sh pulsemixer & hyprctl dispatch submap reset
binde = , v, exec, neovide & hyprctl dispatch submap reset
binde = , b, exec, web_bookmarks.sh & hyprctl dispatch submap reset
binde = , k, exec, kill_process.sh & hyprctl dispatch submap reset
binde = , m, exec, mpv --shuffle --directory-mode=ignore ~/studymusic & hyprctl dispatch submap reset
binde = , i, exec, cd ~/data/images/scrots/; ls -t | sxiv -i & hyprctl dispatch submap reset
binde = , n, exec, ~/work/myorg/titles.py & hyprctl dispatch submap reset
#binde = , left, resizeactive, -10 0
# catch-all, exit a submap when an unknown key is pressed
bind = , catchall, submap, reset
bind = , escape, submap, reset
submap = reset

# switching keyboard layouts
bind = $mainMod, Space, submap, mymap2
submap = mymap2
#binde = , e, exec, hyperctl keyword input:kb_layout us && hyprctl dispatch submap reset
binde = , 1, exec, hyprctl keyword input:kb_layout us && hyprctl dispatch submap reset
binde = , 3, exec, hyprctl keyword input:kb_layout ara && hyprctl dispatch submap reset
binde = , 2, exec, hyprctl keyword input:kb_layout il && hyprctl dispatch submap reset
bind = , catchall, submap, reset
bind = , escape, submap, reset
submap = reset

# audio
bind = $mainMod, 1, workspace, 1
bind = $mainMod ALT, k, exec, control_volume.sh +3%
bind = $mainMod ALT, j, exec, control_volume.sh -3%

# screenshots
bind = $mainMod, P, exec, myscrot.sh
bind = $mainMod SHIFT, P, exec, myscrot.sh 1

bind = $mainMod, r, exec, ags -t applauncher

# overview all workspaces
bind = $mainMod, a, exec, hyprctl dispatch overview:toggle

# maximize this window
# bind = $mainMod, m, scroller:fitsize, active

# See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
# See https://wiki.hyprland.org/Configuring/Workspace-Rules/ for workspace rules

# Example windowrule v1
# windowrule = float, ^(kitty)$

# Example windowrule v2
# windowrulev2 = float,class:^(kitty)$,title:^(kitty)$

windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.

# to turn screen off/on when lid is closed/opened
# bindl = , switch:on:Lid Switch, exec, hyprctl keyword monitor "eDP-1, disable"
# bindl = , switch:off:Lid Switch, exec, hyprctl keyword monitor "eDP-1, highres, auto, auto" && pkill ags && ags
bindl = , switch:on:Lid Switch, exec, hyprctl dispatch dpms off
bindl = , switch:off:Lid Switch, exec, hyprctl dispatch dpms on
#
# to turn keyboard off/on when in tablet mode
bindl = , switch:on:Lenovo Yoga Tablet Mode Control switch, exec, hyprctl keyword "device[keyd-virtual-keyboard]:enabled" 0; notify-send 'disabled keyboard'
bindl = , switch:off:Lenovo Yoga Tablet Mode Control switch, exec, hyprctl keyword "device[keyd-virtual-keyboard]:enabled" 1; notify-send 'enabled keyboard'

# plugin:hyprfocus {
#     enabled = yes

#     keyboard_focus_animation = shrink
#     mouse_focus_animation = flash

#     bezier = bezIn, 0.5,0.0,1.0,0.5
#     bezier = bezOut, 0.0,0.5,0.5,1.0

#     flash {
#         flash_opacity = 0.7

#         in_bezier = bezIn
#         in_speed = 0.5

#         out_bezier = bezOut
#         out_speed = 3
#     }

#     shrink {
#         shrink_percentage = 0.8

#         in_bezier = bezIn
#         in_speed = 0.5

#         out_bezier = bezOut
#         out_speed = 3
#     }
# }

# plugin {
#     hyprbars {
#         # example config
#         bar_height = 20

#         # example buttons (R -> L)
#         # hyprbars-button = color, size, on-click
#         hyprbars-button = rgb(ff4040), 10, 󰖭, hyprctl dispatch killactive
#         hyprbars-button = rgb(eeee11), 10, , hyprctl dispatch fullscreen 1
#     }
# }

# plugin {
#     borders-plus-plus {
#         add_borders = 1 # 0 - 2
#         col.border_1 = rgb(ffffff) # example col for border 1
#         col.border_2 = rgb(2222ff) # example col for border 2
#     }
# }

# plugin {
#     scroller {
#         column_default_width = onehalf
#         focus_wrap = false
#         # ultra-wide monitor
#         # column_widths = onefourth onethird onehalf onesixth
#         # portrait mode monitors
#         # monitor_options = (DP-2 = (mode = row; column_default_width = onehalf; window_default_height = one), HDMI-A-1 = (mode = col; column_default_width = one; window_default_height = onehalf))
#     }
# }

windowrule = float, title:^.*(popup).*$
